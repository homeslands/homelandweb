name: publish

on:
  pull_request_target:
    branches: [main]
    types: [opened, closed]
  workflow_run:
    workflows: ["build-and-test"] # Trigger after 'build-and-test' workflow succeeds
    types:
      - completed

env:
  REGISTRY: ghcr.io
  REPOSITORY_OWNER: homeslands

jobs:
  publish-dev:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    environment: production

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (optional for multi-arch support)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Copy Environment Configuration
        env:
          FE_ENV: ${{ secrets.FE_ENV_DEV }}
        run: |
          echo "$FE_ENV" > ui/.env

      # Step 3: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push api image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./.build/backend/Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/=homeland-api:latest
          labels: ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/homeland-api
          push: true

      - name: Build and push ui image
        uses: docker/build-push-action@v4
        with:
          context: ./ui
          file: ./.build/ui/Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/homeland-ui:latest
          labels: ${{ env.REGISTRY }}/${{ env.REPOSITORY_OWNER }}/homeland-ui
          push: true
